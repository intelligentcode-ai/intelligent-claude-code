task:
  id: "TASK-007"
  title: "Define workflow process templates"
  story: "STORY-002"
  assigned_to: "@AI-Engineer"
  created: "2025-07-15 08:45:00"
  phase: "DONE"
  
description: |
  Create reusable workflow process templates that define the OUTER workflow
  (how epics/stories/tasks are created) and INNER workflow (how tasks execute).
  Both workflows must include Knowledge Retrieval as first step and Knowledge
  Generation as last step, with integration points for user requirements.

embedded_config:
  autonomy_level: "L3"
  git_settings:
    privacy_mode: true
    forbidden_terms: ["AI", "Claude", "Anthropic", "LLM", "chatbot"]
  review_requirements:
    peer_review: true
    architecture_review: true
    security_review: true
  process_requirements:
    knowledge_retrieval_first: true
    knowledge_generation_last: true
    user_requirements_integration: true
  
phases:
  INIT:
    criteria:
      - "Assignment file created with all details"
      - "Embedded config processed and included"
      - "Process requirements understood"
    next_phase: "PLAN"
    
  PLAN:
    entry_criteria:
      - "INIT phase complete"
    subtasks:
      - id: "PLAN-1"
        title: "Retrieve existing workflow knowledge"
        assigned_to: "@AI-Engineer"
        status: "completed"
        validation: "Document current workflow patterns and learnings"
        completed_at: "2025-07-15 08:48:00"
        
      - id: "PLAN-2"
        title: "Analyze workflow structure requirements"
        assigned_to: "@AI-Engineer"
        status: "completed"
        validation: "Define sections needed for both templates"
        completed_at: "2025-07-15 08:49:00"
        
      - id: "PLAN-3"
        title: "Design integration points"
        assigned_to: "@AI-Engineer"
        status: "completed"
        validation: "Clear hooks for user requirements identified"
        completed_at: "2025-07-15 08:50:00"
        
      - id: "PLAN-4"
        title: "Validate with architecture"
        assigned_to: "@AI-Architect"
        status: "completed"
        validation: "Workflow design approved"
        completed_at: "2025-07-15 08:52:00"
    exit_criteria:
      - "All subtasks complete"
      - "Design documented and approved"
    next_phase: "EXECUTE"
    
  EXECUTE:
    entry_criteria:
      - "PLAN phase complete with approved design"
    subtasks:
      - id: "EXEC-1"
        title: "Create workflow-templates directory"
        assigned_to: "@AI-Engineer"
        status: "completed"
        validation: "Directory exists with README"
        completed_at: "2025-07-15 08:54:00"
        
      - id: "EXEC-2"
        title: "Implement outer-workflow.yaml"
        assigned_to: "@AI-Engineer"
        status: "completed"
        validation: "Template includes all planning phases"
        completed_at: "2025-07-15 08:55:00"
        
      - id: "EXEC-3"
        title: "Implement inner-workflow.yaml"
        assigned_to: "@AI-Engineer"
        status: "completed"
        validation: "Template includes all execution phases"
        completed_at: "2025-07-15 08:56:00"
        
      - id: "EXEC-4"
        title: "Add example customizations"
        assigned_to: "@AI-Engineer"
        status: "completed"
        validation: "IaC and testing examples included"
        completed_at: "2025-07-15 08:57:00"
        
      - id: "EXEC-5"
        title: "Document integration patterns"
        assigned_to: "@AI-Engineer"
        status: "completed"
        validation: "Clear instructions for usage"
        completed_at: "2025-07-15 08:58:00"
    exit_criteria:
      - "All templates created and functional"
      - "Documentation complete"
    next_phase: "ACCEPTANCE"
    
  ACCEPTANCE:
    entry_criteria:
      - "EXECUTE phase complete"
    subtasks:
      - id: "ACC-1"
        title: "Peer review workflows"
        assigned_to: "@AI-Architect"
        status: "completed"
        validation: "Workflows follow best practices"
        completed_at: "2025-07-15 09:00:00"
        findings: "4 non-blocking findings, follow-up tasks created"
        
      - id: "ACC-2"
        title: "Test workflow integration"
        assigned_to: "@AI-Engineer"
        status: "completed"
        validation: "Templates work with assignment files"
        completed_at: "2025-07-15 09:01:00"
        
      - id: "ACC-3"
        title: "Security review"
        assigned_to: "@Security-Engineer"
        status: "completed"
        validation: "No security concerns"
        completed_at: "2025-07-15 09:02:00"
        findings: "1 non-blocking finding, follow-up task created"
        
      - id: "ACC-4"
        title: "Capture knowledge learnings"
        assigned_to: "@AI-Engineer"
        status: "completed"
        validation: "Learnings documented for future use"
        completed_at: "2025-07-15 09:03:00"
    exit_criteria:
      - "All reviews passed"
      - "Templates fully validated"
      - "Knowledge captured"
    next_phase: "DONE"
    
  DONE:
    entry_criteria:
      - "ACCEPTANCE phase complete"
      - "All subtasks verified"
    completion_criteria:
      - "Templates ready for use"
      - "Integration documented"
      - "Knowledge available for team"

acceptance_criteria:
  - Outer workflow includes: Knowledge Retrieval → Planning → Knowledge Generation
  - Inner workflow includes: Knowledge Retrieval → Execution → Knowledge Generation  
  - Integration points for user requirements clearly defined
  - Templates are reusable and customizable
  - Examples provided for common scenarios

technical_notes: |
  - Use YAML for template definitions
  - Support inheritance and override patterns
  - Include clear extension points
  - Maintain simplicity while enabling customization

dependencies:
  - Config processor (for embedded settings)
  - Assignment template structure
  
validation_checklist:
  - [ ] Workflows include knowledge phases
  - [ ] User requirement hooks available
  - [ ] Templates are self-documenting
  - [ ] Examples cover common cases
  - [ ] Integration with assignment files works