---
# Backup installation before removal

- name: Create timestamped backup of entire .claude directory
  archive:
    path: "{{ claude_install_path }}"
    dest: "{{ claude_backup_path }}/claude-complete-backup.tar.gz"
    format: gz
    mode: '0644'
  register: backup_result

- name: Copy individual configuration files to backup
  copy:
    src: "{{ claude_install_path }}/{{ item }}"
    dest: "{{ claude_backup_path }}/{{ item }}"
    remote_src: yes
    mode: '0644'
  loop:
    - CLAUDE.md
    - config.md
    - scores.md
    - learning-callouts.md
    - VERSION
  ignore_errors: yes
  when: backup_result is succeeded

- name: Copy modes directory to backup
  copy:
    src: "{{ claude_install_path }}/modes/"
    dest: "{{ claude_backup_path }}/modes/"
    remote_src: yes
    mode: '0644'
  ignore_errors: yes
  when: backup_result is succeeded

- name: Copy behaviors directory to backup
  copy:
    src: "{{ claude_install_path }}/behaviors/"
    dest: "{{ claude_backup_path }}/behaviors/"
    remote_src: yes
    mode: '0644'
  ignore_errors: yes
  when: backup_result is succeeded

- name: Create backup restoration script
  template:
    src: restore.sh.j2
    dest: "{{ claude_backup_path }}/restore.sh"
    mode: '0755'
  when: backup_result is succeeded

- name: Create backup manifest
  template:
    src: backup-manifest.md.j2
    dest: "{{ claude_backup_path }}/backup-manifest.md"
    mode: '0644'
  when: backup_result is succeeded

- name: Display backup success
  debug:
    msg:
      - "Backup created successfully!"
      - "Archive: {{ claude_backup_path }}/claude-complete-backup.tar.gz"
      - "Individual files: {{ claude_backup_path }}/"
      - "Restoration script: {{ claude_backup_path }}/restore.sh"
  when: backup_result is succeeded

- name: Backup failed warning
  debug:
    msg: "WARNING: Backup failed - proceeding with uninstallation anyway"
  when: backup_result is failed