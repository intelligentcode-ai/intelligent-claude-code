---
# Main tasks for intelligent-claude-code installation

- name: Validate installation parameters
  assert:
    that:
      - claude_install_path is defined
      - claude_scope in ['user', 'project']
    fail_msg: "Invalid installation parameters"

- name: Create .claude directory structure
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ claude_install_path }}"
    - "{{ claude_install_path }}/modes"
    - "{{ claude_install_path }}/behaviors"

- name: Check if CLAUDE.md exists
  stat:
    path: "{{ claude_install_path }}/CLAUDE.md"
  register: claude_md_exists

- name: Backup existing CLAUDE.md if present
  copy:
    src: "{{ claude_install_path }}/CLAUDE.md"
    dest: "{{ claude_install_path }}/CLAUDE.md.backup"
    remote_src: yes
  when: claude_md_exists.stat.exists

- name: Handle graceful integration for existing CLAUDE.md
  include_tasks: graceful_integration.yml
  when: claude_md_exists.stat.exists

- name: Create new CLAUDE.md for fresh installation
  template:
    src: CLAUDE.md.j2
    dest: "{{ claude_install_path }}/CLAUDE.md"
    mode: '0644'
  when: not claude_md_exists.stat.exists

- name: Copy virtual team mode files (force=no to preserve user modifications)
  copy:
    src: "{{ playbook_dir }}/../src/modes/"
    dest: "{{ claude_install_path }}/modes/"
    mode: '0644'
    force: no
  ignore_errors: yes
  register: modes_copy_result

- name: Display modes preservation notice
  debug:
    msg: "Mode files preserved: {{ claude_install_path }}/modes/ already exists - keeping user modifications"
  when: modes_copy_result.failed

- name: Copy behavior files (force=no to preserve user modifications)
  copy:
    src: "{{ playbook_dir }}/../src/behaviors/"
    dest: "{{ claude_install_path }}/behaviors/"
    mode: '0644'
    force: no
  ignore_errors: yes
  register: behaviors_copy_result

- name: Display behaviors preservation notice
  debug:
    msg: "Behavior files preserved: {{ claude_install_path }}/behaviors/ already exists - keeping user modifications"
  when: behaviors_copy_result.failed

- name: Copy VERSION file (force=no to preserve user modifications)
  copy:
    src: "{{ playbook_dir }}/../src/VERSION"
    dest: "{{ claude_install_path }}/VERSION"
    mode: '0644'
    force: no
  ignore_errors: yes
  register: version_copy_result

- name: Display VERSION preservation notice
  debug:
    msg: "VERSION file preserved: {{ claude_install_path }}/VERSION already exists - keeping user modifications"
  when: version_copy_result.failed

- name: Check if config.md exists
  stat:
    path: "{{ claude_install_path }}/config.md"
  register: config_md_exists

- name: Create config.md from template (ONLY if not exists)
  copy:
    src: "{{ playbook_dir }}/../src/config.md"
    dest: "{{ claude_install_path }}/config.md"
    mode: '0644'
  when: not config_md_exists.stat.exists

- name: Display config preservation notice
  debug:
    msg: "Config file preserved: {{ claude_install_path }}/config.md already exists - keeping user settings"
  when: config_md_exists.stat.exists

- name: Check if scores.md exists
  stat:
    path: "{{ claude_install_path }}/scores.md"
  register: scores_md_exists

- name: Create scores.md from template (ONLY if not exists)
  copy:
    src: "{{ playbook_dir }}/../src/scores.md"
    dest: "{{ claude_install_path }}/scores.md"
    mode: '0644'
  when: not scores_md_exists.stat.exists

- name: Display scores preservation notice
  debug:
    msg: "Scores file preserved: {{ claude_install_path }}/scores.md already exists - keeping user scoring data"
  when: scores_md_exists.stat.exists

- name: Check if learning-callouts.md exists
  stat:
    path: "{{ claude_install_path }}/learning-callouts.md"
  register: learning_callouts_exists

- name: Create learning-callouts.md from template (ONLY if not exists)
  copy:
    src: "{{ playbook_dir }}/../src/learning-callouts.md"
    dest: "{{ claude_install_path }}/learning-callouts.md"
    mode: '0644'
  when: not learning_callouts_exists.stat.exists

- name: Display learning-callouts preservation notice
  debug:
    msg: "Learning callouts preserved: {{ claude_install_path }}/learning-callouts.md already exists - keeping team learning data"
  when: learning_callouts_exists.stat.exists

- name: Handle project-specific integration
  include_tasks: project_integration.yml
  when: claude_scope == "project"

- name: Force update mode files if update_mode is enabled
  copy:
    src: "{{ playbook_dir }}/../src/modes/"
    dest: "{{ claude_install_path }}/modes/"
    mode: '0644'
    force: yes
  when: update_mode is defined and update_mode | bool

- name: Force update behavior files if update_mode is enabled
  copy:
    src: "{{ playbook_dir }}/../src/behaviors/"
    dest: "{{ claude_install_path }}/behaviors/"
    mode: '0644'
    force: yes
  when: update_mode is defined and update_mode | bool

- name: Force update VERSION file if update_mode is enabled
  copy:
    src: "{{ playbook_dir }}/../src/VERSION"
    dest: "{{ claude_install_path }}/VERSION"
    mode: '0644'
    force: yes
  when: update_mode is defined and update_mode | bool

- name: Display update mode notice
  debug:
    msg: "Update mode: Force overriding user modifications to mode files, behavior files, and VERSION"
  when: update_mode is defined and update_mode | bool

- name: Display installation summary
  debug:
    msg:
      - "Installation complete!"
      - "Location: {{ claude_install_path }}"
      - "Mode: Enhanced Virtual Team (14 core roles + unlimited dynamic specialists)"
      - "Core Roles: @PM, @Architect, @Developer, @User-Role, @System/DevOps/Database/Security/AI/Web/QA/Frontend/Backend-Engineers, @Requirements-Engineer"
      - "Features: Memory Bank (Î»=0.1), User-Role (Puppeteer), Anti-Panic, Task Format Enforcement"
      - "Activation: @-notation for specialized roles (@PM, @Architect, @Developer, @User-Role, etc.)"
      - "Architecture: 5-module clustered system with Level 3 autonomy"
      - "{{ 'Update mode: Files forcefully updated' if (update_mode is defined and update_mode | bool) else 'Preservation mode: User modifications preserved' }}"