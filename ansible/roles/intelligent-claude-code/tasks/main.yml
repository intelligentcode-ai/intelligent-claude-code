---
# Main tasks for intelligent-claude-code installation

- name: Validate installation parameters
  assert:
    that:
      - claude_install_path is defined
      - claude_scope in ['user', 'project']
    fail_msg: "Invalid installation parameters"

- name: Create .claude directory structure
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ claude_install_path }}"
    - "{{ claude_install_path }}/modes"
    - "{{ claude_install_path }}/behaviors"
    - "{{ claude_install_path }}/commands"
    - "{{ claude_install_path }}/roles"
    - "{{ claude_install_path }}/agents"
    - "{{ claude_install_path }}/agenttask-templates"
    - "{{ claude_install_path }}/hooks"
    - "{{ claude_install_path }}/logs"

- name: Check if CLAUDE.md exists
  stat:
    path: "{{ claude_install_path }}/CLAUDE.md"
  register: claude_md_exists

- name: Backup existing CLAUDE.md if present
  copy:
    src: "{{ claude_install_path }}/CLAUDE.md"
    dest: "{{ claude_install_path }}/CLAUDE.md.backup"
    remote_src: yes
  when: claude_md_exists.stat.exists

- name: Handle graceful integration for existing CLAUDE.md
  ansible.builtin.import_tasks: graceful_integration.yml
  when: claude_md_exists.stat.exists

- name: Create new CLAUDE.md for fresh installation
  template:
    src: CLAUDE.md.j2
    dest: "{{ claude_install_path }}/CLAUDE.md"
    mode: '0644'
  when: not claude_md_exists.stat.exists

- name: Copy virtual team mode files
  copy:
    src: "{{ playbook_dir }}/../src/modes/"
    dest: "{{ claude_install_path }}/modes/"
    mode: '0644'
    force: yes
  register: modes_copy_result

- name: Display modes preservation notice
  debug:
    msg: "Mode files preserved: {{ claude_install_path }}/modes/ already exists - keeping user modifications"
  when: modes_copy_result.failed and ansible_verbosity >= 1

- name: Copy behavior files
  copy:
    src: "{{ playbook_dir }}/../src/behaviors/"
    dest: "{{ claude_install_path }}/behaviors/"
    mode: '0644'
    force: yes
  register: behaviors_copy_result

- name: Display behaviors preservation notice
  debug:
    msg: "Behavior files preserved: {{ claude_install_path }}/behaviors/ already exists - keeping user modifications"
  when: behaviors_copy_result.failed and ansible_verbosity >= 1

- name: Copy commands directory
  copy:
    src: "{{ playbook_dir }}/../src/commands/"
    dest: "{{ claude_install_path }}/commands/"
    mode: '0644'
    force: yes
  register: commands_copy_result

- name: Display commands preservation notice
  debug:
    msg: "Commands directory preserved: {{ claude_install_path }}/commands/ already exists - keeping user modifications"
  when: commands_copy_result.failed and ansible_verbosity >= 1

- name: Copy roles directory
  copy:
    src: "{{ playbook_dir }}/../src/roles/"
    dest: "{{ claude_install_path }}/roles/"
    mode: '0644'
    force: yes
  register: roles_copy_result

- name: Display roles preservation notice
  debug:
    msg: "Roles directory preserved: {{ claude_install_path }}/roles/ already exists - keeping user modifications"
  when: roles_copy_result.failed and ansible_verbosity >= 1

- name: Copy agents directory
  copy:
    src: "{{ playbook_dir }}/../src/agents/"
    dest: "{{ claude_install_path }}/agents/"
    mode: '0644'
    force: yes
  register: agents_copy_result

- name: Display agents preservation notice
  debug:
    msg: "Agents directory preserved: {{ claude_install_path }}/agents/ already exists - keeping user modifications"
  when: agents_copy_result.failed and ansible_verbosity >= 1

- name: Copy AgentTask templates directory
  copy:
    src: "{{ playbook_dir }}/../src/agenttask-templates/"
    dest: "{{ claude_install_path }}/agenttask-templates/"
    mode: '0644'
    force: yes
  register: agenttask_templates_copy_result

- name: Display AgentTask templates preservation notice
  debug:
    msg: "AgentTask templates directory preserved: {{ claude_install_path }}/agenttask-templates/ already exists - keeping user modifications"
  when: agenttask_templates_copy_result.failed and ansible_verbosity >= 1

- name: Copy hooks directory
  synchronize:
    src: "{{ playbook_dir }}/../src/hooks/"
    dest: "{{ claude_install_path }}/hooks/"
    recursive: yes
    delete: no
    rsync_opts:
      - "--exclude=node_modules/"
      - "--exclude=package-lock.json"
  delegate_to: localhost
  register: hooks_copy_result

- name: Ensure hooks subdirectories are copied
  copy:
    src: "{{ playbook_dir }}/../src/hooks/{{ item }}/"
    dest: "{{ claude_install_path }}/hooks/{{ item }}/"
    mode: preserve
    force: yes
  loop:
    - lib
  ignore_errors: yes

- name: Display hooks preservation notice
  debug:
    msg: "Hooks directory preserved: {{ claude_install_path }}/hooks/ already exists - keeping user modifications"
  when: hooks_copy_result.failed and ansible_verbosity >= 1

- name: Make production hook scripts executable
  file:
    path: "{{ claude_install_path }}/hooks/{{ item }}"
    mode: '0755'
  loop:
    - pre-tool-use.js
    - post-tool-use.js
  ignore_errors: yes


- name: Copy VERSION file
  copy:
    src: "{{ playbook_dir }}/../src/VERSION"
    dest: "{{ claude_install_path }}/VERSION"
    mode: '0644'
    force: yes
  register: version_copy_result

- name: Display VERSION preservation notice
  debug:
    msg: "VERSION file preserved: {{ claude_install_path }}/VERSION already exists - keeping user modifications"
  when: version_copy_result.failed and ansible_verbosity >= 1

- name: Check if config.md exists
  stat:
    path: "{{ claude_install_path }}/config.md"
  register: config_md_exists

- name: Create config.md from template (ONLY if not exists)
  copy:
    src: "{{ playbook_dir }}/../src/config.md"
    dest: "{{ claude_install_path }}/config.md"
    mode: '0644'
  when: not config_md_exists.stat.exists

- name: Display config preservation notice
  debug:
    msg: "Config file preserved: {{ claude_install_path }}/config.md already exists - keeping user settings"
  when: config_md_exists.stat.exists and ansible_verbosity >= 1

- name: Check if settings.json exists
  stat:
    path: "{{ claude_install_path }}/settings.json"
  register: settings_json_exists

- name: Create settings.json with hook registration (ONLY if not exists)
  template:
    src: settings.json.j2
    dest: "{{ claude_install_path }}/settings.json"
    mode: '0644'
  when: not settings_json_exists.stat.exists

- name: Merge hooks into existing settings.json
  block:
    - name: Read existing settings.json
      slurp:
        src: "{{ claude_install_path }}/settings.json"
      register: existing_settings

    - name: Parse existing settings as JSON
      set_fact:
        settings_data: "{{ existing_settings.content | b64decode | from_json }}"

    - name: Add hooks section to existing settings
      set_fact:
        merged_settings: "{{ settings_data | combine({'hooks': {'PreToolUse': [{'matcher': '*', 'hooks': [{'type': 'command', 'command': 'node ' + claude_install_path + '/hooks/pre-tool-use.js', 'timeout': 15000, 'failureMode': 'allow'}]}], 'PostToolUse': [{'matcher': '*', 'hooks': [{'type': 'command', 'command': 'node ' + claude_install_path + '/hooks/post-tool-use.js', 'timeout': 15000, 'failureMode': 'allow'}]}]}}, recursive=True) }}"

    - name: Write merged settings.json
      copy:
        content: "{{ merged_settings | to_nice_json(indent=2) }}"
        dest: "{{ claude_install_path }}/settings.json"
        mode: '0644'

    - name: Report hook registration
      debug:
        msg: "PreToolUse and PostToolUse hooks merged into existing settings.json - behavioral enforcement active"

  when: settings_json_exists.stat.exists

- name: Display settings creation notice
  debug:
    msg: "Settings file created with PreToolUse and PostToolUse hook registration - behavioral enforcement active"
  when: not settings_json_exists.stat.exists and ansible_verbosity >= 1

# badges.md file removed - scoring system simplified to clean progress reporting

# learning-callouts.md file removed - integrated into learning-team-automation.md system

- name: Handle project-specific integration
  ansible.builtin.import_tasks: project_integration.yml
  when: claude_scope == "project"


- name: Display installation summary
  debug:
    msg:
      - "✅ Installation complete!"
      - "📍 Location: {{ claude_install_path }}"
      - "🤖 Virtual Team: 14 core roles + unlimited specialists"
      - "🔒 Behavioral Hooks: PreToolUse and PostToolUse enforcement active"
      - "🚀 Use @Role communication to activate team members"