story:
  id: "STORY-010"
  title: "Implement Automated Archival System"
  epic: "EPIC-002"
  created: "2025-01-15 17:15:00"
  created_by: "@PM"
  assigned_to: "@AI-Engineer"
  priority: "P1"  # HIGH - Workspace management
  status: "COMPLETED"
  phase: "DONE"
  
description: |
  Implement an automated archival system to manage completed work and maintain
  a clean working directory while preserving historical reference.
  
  REQUIREMENTS:
  - Completed tasks should be archived OUT of version control
  - Completed bugs/stories should be archived IN version control
  - Automatic detection of completed items
  - Clean separation of active vs archived work
  - Proper .gitignore management
  
acceptance_criteria:
  - Given a completed bug/story, when archived, then tasks move to archives/tasks/
  - Given a completed bug/story, when archived, then bug/story moves to archives/completed/
  - Given archived tasks, when checked, then they are NOT in version control
  - Given archived bugs/stories, when checked, then they ARE in version control
  - Given the archival system, when used, then .gitignore is properly maintained
  
technical_notes:
  - Create archival commands (icc:archive-completed)
  - Implement automatic detection of completed items
  - Handle both manual and automated archival
  - Ensure proper git operations
  - Create restoration utilities for archived items
  
workflow_integration:
  - Hook into task completion phase
  - Trigger on bug/story completion
  - Integrate with lean workflow executor
  - Add to PM command system
  
embedded_config:
  autonomy_level: "L2"
  pm_always_active: true
  
tasks:
  - task_id: "TASK-001"
    title: "Design archival system architecture"
    assigned_to: "@System-Engineer"
    type: "design"
    priority: "blocking"
    status: "planned"
    
  - task_id: "TASK-002"
    title: "Implement archival detection logic"
    assigned_to: "@Developer"
    type: "implementation"
    priority: "critical_path"
    dependencies: ["TASK-001"]
    status: "planned"
    
  - task_id: "TASK-003"
    title: "Create archival commands"
    assigned_to: "@Developer"
    type: "implementation"
    priority: "critical_path"
    dependencies: ["TASK-001"]
    status: "planned"
    
  - task_id: "TASK-004"
    title: "Implement git operations for archival"
    assigned_to: "@DevOps-Engineer"
    type: "implementation"
    priority: "critical_path"
    dependencies: ["TASK-002", "TASK-003"]
    status: "planned"
    
  - task_id: "TASK-005"
    title: "Create restoration utilities"
    assigned_to: "@Developer"
    type: "implementation"
    priority: "parallel"
    dependencies: ["TASK-003"]
    status: "planned"
    
  - task_id: "TASK-006"
    title: "Test archival system"
    assigned_to: "@QA-Engineer"
    type: "testing"
    priority: "critical_path"
    dependencies: ["TASK-004"]
    status: "planned"
    
  - task_id: "TASK-007"
    title: "Integrate with workflow executor"
    assigned_to: "@System-Engineer"
    type: "integration"
    priority: "critical_path"
    dependencies: ["TASK-004"]
    status: "planned"
    
  - task_id: "TASK-008"
    title: "Update documentation"
    assigned_to: "@Requirements-Engineer"
    type: "documentation"
    priority: "parallel"
    dependencies: ["TASK-007"]
    status: "planned"
    
  - task_id: "TASK-009"
    title: "Git operations"
    assigned_to: "@Developer"
    type: "git"
    priority: "critical_path"
    dependencies: ["TASK-008"]
    status: "planned"