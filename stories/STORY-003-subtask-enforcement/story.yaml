story:
  id: "STORY-003"
  title: "Subtask Completion Enforcement"
  epic: "EPIC-002"
  created: "2025-07-15 07:29:21"
  status: "PLANNED"
  
description: |
  Implement hard enforcement of subtask completion before phase transitions.
  This ensures the workflow is actually followed and steps cannot be skipped,
  making the system DEPENDABLE.
  
acceptance_criteria:
  - Phase transitions validate all subtasks complete
  - Incomplete subtasks block phase changes
  - Clear status tracking for each subtask
  - Validation errors provide specific guidance
  - Override only possible with explicit justification
  
tasks:
  - id: "TASK-011"
    title: "Add subtask status tracking to assignment template"
    description: "Enhance assignment files with explicit status fields"
    estimated_size: "SMALL"
    acceptance: "Each subtask has status: pending|in_progress|completed|blocked"
    
  - id: "TASK-012"
    title: "Implement phase transition validation"
    description: "Create validation logic for phase changes"
    estimated_size: "MEDIUM"
    acceptance: "Phase changes check all subtask statuses"
    
  - id: "TASK-013"
    title: "Create blocking mechanism"
    description: "Prevent phase file update when subtasks incomplete"
    estimated_size: "SMALL"
    acceptance: "Phase transition command fails with clear message"
    
  - id: "TASK-014"
    title: "Add progress visualization"
    description: "Show subtask completion progress clearly"
    estimated_size: "SMALL"
    acceptance: "Progress shown as X/Y subtasks complete"
    
  - id: "TASK-015"
    title: "Implement override mechanism"
    description: "Allow justified override with documentation"
    estimated_size: "SMALL"
    acceptance: "Override requires reason and creates follow-up"
    
technical_notes: |
  - Use structured validation before file writes
  - Maintain audit trail of all phase transitions
  - Consider using git hooks for additional enforcement
  - Status changes should be atomic operations