# Medium PRB Template - Standard Features
# Auto-selected for complexity score 6-15
# Replaces Inner Workflow completely

id: MEDIUM-[AUTO]
type: medium-prb
complexity: standard
priority: "[PRIORITY_LEVEL]"  # CRITICAL, HIGH, MEDIUM, LOW
title: "[ROLE] [DESCRIPTION]"

# MANDATORY: Complete Context Section
complete_context:
  project: "[CLAUDE.md]"        # Project context from CLAUDE.md
  settings: "[ALL-SETTINGS]"   # All configuration values
  git_privacy: "[FROM_CONFIG]" # git_privacy setting from config
  branch_protection: "[FROM_CONFIG]" # branch_protection from config
  default_branch: "[FROM_CONFIG]"    # default_branch from config
  branch_strategy: "[FROM_CONFIG]"   # branch_prefixes from config
  scope: "[FEATURE_SCOPE]"
  best_practices:
    - source: "docs/best-practices/[DOMAIN].md"
    - source: "[PROJECT_ARCHITECTURE_DOCS]"
  code_samples:
    - search: "[PATTERN_IN_CODEBASE]"
    - reference: "[EXISTING_IMPLEMENTATION]"
  external_docs:
    - url: "[DOCUMENTATION_URL]"
    - context7: "[LIBRARY_ID]"  # Real-time documentation
  
# MANDATORY: Requirements Section
requirements:
  functional:
    - "[REQUIREMENT_1]"
    - "[REQUIREMENT_2]"
    - "[REQUIREMENT_3]"
  processual:
    - "Respect git_privacy setting for commit messages"
    - "Follow branch protection strategy from config"
    - "Use configured default branch for operations"
    - "Apply configured branch naming strategy"
  technical:
    - "[TECH_REQUIREMENT_1]"
    - "[TECH_REQUIREMENT_2]"
  constraints:
    coding_style: "[PROJECT_CODING_STYLE]"
    architecture: "[PROJECT_ARCHITECTURE_PATTERN]"
    infrastructure: "[IAC_STANDARDS]"  # e.g., Terraform best practices
    
# Embedded learnings (no runtime search needed)
embedded_learnings:
  # Only MOST RELEVANT 2-3 entries embedded (token-efficient)
  # Selected based on topic match and recency
  primary_pattern: |
    From: memory/authentication/oauth2-patterns.md
    ## 2025-01-23: OAuth2 Token Refresh
    [ONLY THIS SPECIFIC ENTRY - max 500 tokens]
    
  related_learning: |
    From: memory/error-handling/api-errors.md  
    ## 2025-01-20: 401 Error Handling
    [ONLY THIS SPECIFIC ENTRY - max 300 tokens]
  
# Execution plan with configurable behaviors
execution_plan:
  approach: "[TECHNICAL_APPROACH]"
  behavioral_overrides:  # Project-specific behavior customization
    error_handling: "[PROJECT_ERROR_PATTERN]"
    testing_approach: "[PROJECT_TEST_STRATEGY]"
    review_process: "[PROJECT_REVIEW_STYLE]"
  steps:
    - "[DESIGN_STEP]"
    - "[IMPLEMENT_STEP]" 
    - "[TEST_STEP]"
    - "[INTEGRATE_STEP]"
    
# Replaces Inner Workflow Steps 3-4: Execute & Review  
implementation:
  files_to_modify:
    - path: "[FILE_1]"
      changes: "[CHANGES_1]"
    - path: "[FILE_2]"
      changes: "[CHANGES_2]"
      
validation_criteria:
  technical:
    - "[TECH_CHECK_1]"
    - "[TECH_CHECK_2]"
  functional:
    - "[FUNC_CHECK_1]"
    - "[FUNC_CHECK_2]"
    
# Pre-assigned SME (no runtime selection)
sme_review:
  reviewer: "[PRE_ASSIGNED_SME]"
  focus_areas: ["[AREA_1]", "[AREA_2]"]
  max_cycles: 3
  
# MANDATORY: Git Operations Section
git_operations:
  branch_strategy: "[FROM_CONFIG]"     # Use configured branch prefixes
  branch_protection: "[FROM_CONFIG]"  # Respect branch protection setting
  branch_name: "[FROM_CONFIG_PREFIX]/[ID]-[DESCRIPTION]"
  commit_format: "[ID]: [DESCRIPTION]"
  privacy_filter: "[FROM_CONFIG]"     # Apply git_privacy if enabled
  default_branch: "[FROM_CONFIG]"     # Target configured default branch
  version_bump: "[PATCH|MINOR]"
  
# MANDATORY: Knowledge Management Section
knowledge_management:
  structure: "memory/[topic]/[subtopic].md"
  storage: "version-controlled"
  embedded_learnings: "pre_searched_patterns"
  capture_patterns: "[CAPTURE_PATTERNS]"
  capture_insights: "[CAPTURE_INSIGHTS]"
  store_location: "memory/[TYPE]/[YYYY]/[MM]/"

# MANDATORY: Review Process Section
review_process:
  type: "sme_review"
  reviewer: "[PRE_ASSIGNED_SME]"
  focus_areas: ["[AREA_1]", "[AREA_2]"]
  max_cycles: 3
  checklist:
    - "Configuration settings applied correctly"
    - "Multi-file coordination successful"
    - "Functional requirements met"
    - "Technical constraints satisfied"

# MANDATORY: Implementation Samples Section
implementation_samples:
  example_commit: "[MEDIUM-001]: Implement user authentication system"
  example_branch: "feature/MEDIUM-001-user-authentication"
  example_scope: |
    Files: src/auth/, src/middleware/, src/routes/auth.js
    - Implement JWT authentication
    - Add middleware for route protection
    - Create user login/logout endpoints
    - Add password hashing utilities

# Store new learnings in version control
learning_capture:
  patterns: "[CAPTURE_PATTERNS]"
  insights: "[CAPTURE_INSIGHTS]"
  store_location: "memory/[TYPE]/[YYYY]/[MM]/"
  version_control: true