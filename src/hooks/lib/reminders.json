{
  "preAction": [
    "🚫 NO WORK IN MAIN SCOPE - all work must use PRB → Task → Agent",
    "🔍 ALWAYS search memory before creating any AgentTask",
    "📋 Check best-practices/ directory before implementation",
    "✅ Template compliance required - use nano/tiny/medium/large/mega",
    "🎯 Use @Role patterns for natural team interaction",
    "👔 PM = COORDINATION ONLY - never perform technical work",
    "📝 Complete context required in PRBs before agent execution",
    "🔄 Main agent creates PRBs, subagents execute work",
    "💾 All learnings must be stored in memory after completion",
    "🚀 Work requests automatically trigger PRB generation",
    "📊 Complexity scoring determines template selection",
    "🔒 Respect git_privacy settings in all operations",
    "🎭 Dynamic specialists created for any technology domain",
    "📚 Memory-first approach prevents duplicate work",
    "⚡ Parallel execution supports up to 5 non-conflicting tasks",
    "🏗️ Architectural pattern: ALL WORK → AGENTTASK → AGENT EXECUTION",
    "🔧 Tools reserved for authorized subagent execution only",
    "📑 Story breakdown requires @PM + Architect collaboration",
    "🚨 Version bumping required before git operations",
    "🎪 Sequential thinking enhances ALL decision patterns",
    "🔐 Filter AI mentions from commits when git_privacy=true",
    "📖 Apply project coding standards from best-practices/",
    "🌿 Follow merge_strategy from workflow settings",
    "📚 Create PRs when pr_required=true in workflow",
    "🔬 Research, don't assume - verify facts before making decisions",
    "📦 AgentTasks must be SELF-CONTAINED with all context embedded",
    "🚫 No runtime lookups - all config and memory embedded in AgentTasks",
    "🔐 Respect git settings - follow branch protection and merge strategies",
    "🎯 Choose the RIGHT agent - match project scope and task type to specialist expertise"
  ],
  "postAction": [
    "💾 Store successful patterns in memory after completion",
    "✅ Validate all PRB requirements were met",
    "📝 Update documentation with any changes made",
    "🔄 Reload Claude Code after configuration changes",
    "🎯 Remember @Role patterns for natural team coordination",
    "🧠 Memory-first approach - check memory before asking users",
    "🏗️ Main agent = coordination, subagents = execution",
    "💡 Use @PM break down story or @Developer implement feature",
    "📚 Every PRB completion is a learning opportunity",
    "🔒 Check git_privacy settings and filter AI mentions",
    "📊 Template compliance maintained throughout execution",
    "🎭 Dynamic specialists available for any technology",
    "⚡ System supports parallel non-conflicting execution",
    "🚀 Work→PRB→Agent pattern ensures reliable automation",
    "📑 Quality gates passed before marking complete",
    "🎪 Sequential thinking applied for complex analysis",
    "🔧 Agent execution completed with full tool authorization",
    "💾 Learning capture contributes to collective knowledge",
    "🎯 @Role communication more intuitive than commands",
    "📝 Documentation completeness validated",
    "📋 Store successful patterns as best-practices when applicable",
    "🔐 Professional commit messages without AI references",
    "📖 README updates reflect current state",
    "🏆 Best-practice patterns promoted from successful implementations",
    "🎚️ Respect autonomy_level settings (L1/L2/L3) for execution decisions",
    "🤖 L3 autonomy enables continuous work discovery and execution",
    "🧹 Clean up unnecessary resources and temporary files after execution",
    "🗑️ Remove obsolete AgentTasks and archive completed work",
    "🧠 Contribute learnings to memory after every execution",
    "💡 Store discovered patterns and solutions in memory/",
    "📦 Move completed AgentTasks to agenttasks/completed/",
    "✓ Mark AgentTasks complete with execution summary",
    "📊 Provide comprehensive execution summary at completion",
    "🎯 Show proof of work done, not claims of completion",
    "🔍 Verify actual changes made, don't just claim success",
    "📝 Document specific files changed and actions taken",
    "✅ Show evidence of completion with file paths and changes",
    "🚫 Never claim completion without verifiable proof",
    "📌 List actual modifications, not intended changes",
    "📦 Verify AgentTask was self-contained without external dependencies",
    "✅ Confirm no runtime lookups were needed during execution"
  ]
}