#!/bin/bash

# Pre-commit hook to prevent memory files from being committed
# This provides the first line of defense for memory privacy

echo "üîç Checking for memory files before commit..."

# Check if any memory-related files are staged
MEMORY_FILES=$(git diff --cached --name-only | grep -E '^memory/|\.memory$|\.learning$' || true)

if [ ! -z "$MEMORY_FILES" ]; then
    echo ""
    echo "‚ùå COMMIT BLOCKED: Memory files detected in staging area!"
    echo ""
    echo "üìã Files that must not be committed:"
    echo "$MEMORY_FILES" | sed 's/^/  - /'
    echo ""
    echo "üîí Memory files contain private learning data and must remain local-only."
    echo ""
    echo "üõ†Ô∏è  To fix this issue:"
    echo "   git reset HEAD memory/        # Unstage memory directory"
    echo "   git reset HEAD *.memory       # Unstage memory files"
    echo "   git reset HEAD *.learning     # Unstage learning files"
    echo ""
    echo "‚ÑπÔ∏è  Memory files are automatically ignored by .gitignore"
    echo "   but this hook prevents accidental commits if they get staged."
    echo ""
    exit 1
fi

echo "‚úÖ No memory files detected. Commit allowed."
echo ""

exit 0