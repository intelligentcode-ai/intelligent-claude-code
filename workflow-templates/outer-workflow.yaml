# Outer Workflow Template - Planning Process
# Defines how epics, stories, and tasks are created

metadata:
  name: "Standard Planning Workflow"
  version: "1.0.0"
  min_compatible: "1.0.0"
  description: |
    Standard workflow for creating planning artifacts (epics, stories, tasks).
    Emphasizes knowledge retrieval at start and knowledge generation at end.
    
workflow:
  phases:
    - id: "knowledge_retrieval"
      name: "Knowledge Retrieval"
      description: "Retrieve relevant past knowledge before planning"
      steps:
        - id: "search_similar_work"
          action: "Search for similar epics/stories/tasks"
          queries:
            - "Similar features implemented"
            - "Past architectural decisions"
            - "Lessons learned from related work"
          outputs:
            - "relevant_patterns"
            - "reusable_solutions"
            - "known_pitfalls"
            
        - id: "load_domain_knowledge"
          action: "Load domain-specific knowledge"
          sources:
            - "memory_entities"
            - "documentation"
            - "team_expertise"
            
    - id: "requirements_analysis"
      name: "Requirements Analysis"
      description: "Understand what needs to be built"
      steps:
        - id: "gather_requirements"
          action: "Capture user requirements"
          outputs:
            - "functional_requirements"
            - "non_functional_requirements"
            - "constraints"
            
        - id: "define_acceptance_criteria"
          action: "Create measurable acceptance criteria"
          validation:
            - "Each criteria is specific"
            - "Each criteria is measurable"
            - "Validation method defined"
            
      hooks:
        post_requirements:
          description: "After requirements are gathered"
          allows: ["inject", "extend"]
          
    - id: "architecture_design"
      name: "Architecture Design"
      description: "Define technical approach"
      steps:
        - id: "analyze_architecture"
          action: "Design system architecture"
          considerations:
            - "scalability"
            - "security"
            - "performance"
            - "maintainability"
            
        - id: "technology_selection"
          action: "Choose appropriate technologies"
          validation:
            - "Team expertise available"
            - "Technology maturity assessed"
            - "Integration complexity evaluated"
            
        - id: "identify_risks"
          action: "Identify and mitigate risks"
          outputs:
            - "risk_register"
            - "mitigation_strategies"
            
    - id: "task_breakdown"
      name: "Task Breakdown"
      description: "Create atomic executable units"
      steps:
        - id: "decompose_work"
          action: "Break down into atomic tasks"
          rules:
            - "Each task does ONE thing"
            - "Tasks are independently testable"
            - "Clear completion criteria"
            
        - id: "sequence_tasks"
          action: "Define task dependencies"
          outputs:
            - "dependency_graph"
            - "parallel_opportunities"
            - "critical_path"
            
        - id: "estimate_effort"
          action: "Estimate task sizes"
          categories:
            - "SMALL: < 2 hours"
            - "MEDIUM: 2-8 hours"
            - "LARGE: > 8 hours (split recommended)"
            
        - id: "assign_roles"
          action: "Match tasks to role capabilities"
          validation:
            - "Capability match > 70%"
            - "Specialist creation if needed"
            - "Load balancing considered"
            
    - id: "knowledge_generation"
      name: "Knowledge Generation"
      description: "Capture planning decisions and rationale"
      steps:
        - id: "document_decisions"
          action: "Record all planning decisions"
          captures:
            - "Decision rationale"
            - "Alternatives considered"
            - "Trade-offs accepted"
            
        - id: "create_planning_entities"
          action: "Store in memory system"
          entities:
            - type: "Planning"
              attributes:
                - "approach"
                - "architecture"
                - "risks"
                - "estimates"
                
        - id: "establish_patterns"
          action: "Identify reusable patterns"
          outputs:
            - "planning_patterns"
            - "estimation_guidelines"
            - "architecture_templates"
            
hooks:
  pre_planning:
    description: "Before any planning activities"
    timing: "start"
    allows: ["inject", "extend"]
    
  post_requirements:
    description: "After requirements gathered"
    timing: "after_requirements_analysis"
    allows: ["inject", "extend", "override"]
    
  pre_deployment:
    description: "Before artifact creation"
    timing: "end"
    allows: ["inject", "validate"]
    
customization:
  allow_step_override: true
  allow_step_insertion: true
  allow_conditional_steps: true
  
  example_conditions:
    - condition: "project_type == 'infrastructure'"
      insert_steps:
        - after: "technology_selection"
          step:
            id: "iac_planning"
            action: "Plan infrastructure as code"
            
    - condition: "compliance_required == true"
      insert_steps:
        - after: "requirements_analysis"
          step:
            id: "compliance_review"
            action: "Review compliance requirements"
            
validation:
  required_outputs:
    - "acceptance_criteria"
    - "task_breakdown"
    - "role_assignments"
    - "knowledge_captured"
    
  quality_checks:
    - "All tasks atomic"
    - "All criteria measurable"
    - "All roles capability-matched"
    - "Knowledge retrieval performed"
    - "Knowledge generation completed"