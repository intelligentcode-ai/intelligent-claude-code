name: Memory Protection Check

on:
  pull_request:
    branches: [ "*" ]  # Run on all branches for comprehensive protection
  push:
    branches: [ "*" ]  # Run on all branches
  workflow_dispatch:    # Allow manual triggering

jobs:
  check-memory-files:
    runs-on: ubuntu-latest
    name: "üîí Memory Privacy Protection"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Fetch full history for comprehensive checking
        fetch-depth: 0
    
    - name: Check repository for memory files
      run: |
        echo "üîç Scanning repository for memory files..."
        
        # Check if any memory files are tracked in git
        TRACKED_MEMORY=$(git ls-files | grep -E "^memory/|\.memory$|\.learning$" || true)
        
        if [ ! -z "$TRACKED_MEMORY" ]; then
          echo ""
          echo "‚ùå CRITICAL: Memory files found in repository!"
          echo ""
          echo "üìã Tracked memory files:"
          echo "$TRACKED_MEMORY" | sed 's/^/  - /'
          echo ""
          echo "üîí These files contain private learning data and violate memory privacy!"
          echo ""
          echo "üõ†Ô∏è  Immediate action required:"
          echo "   git rm -r memory/           # Remove from tracking"
          echo "   git rm *.memory *.learning  # Remove memory files" 
          echo "   git commit -m 'Remove memory files from tracking'"
          echo ""
          echo "‚ÑπÔ∏è  Memory files should remain local-only as configured in .gitignore"
          exit 1
        fi
        
        echo "‚úÖ Repository scan complete - no tracked memory files found"

    - name: Check PR diff for memory files (PR only)
      if: github.event_name == 'pull_request'
      run: |
        echo ""
        echo "üîç Checking PR changes for memory files..."
        
        # Get the target branch (usually main)
        TARGET_BRANCH="${{ github.base_ref }}"
        
        # Check files changed in this PR
        CHANGED_MEMORY=$(git diff --name-only origin/$TARGET_BRANCH...HEAD | grep -E "^memory/|\.memory$|\.learning$" || true)
        
        if [ ! -z "$CHANGED_MEMORY" ]; then
          echo ""
          echo "‚ùå PR BLOCKED: Memory files in pull request!"
          echo ""
          echo "üìã Memory files in PR changes:"
          echo "$CHANGED_MEMORY" | sed 's/^/  - /'
          echo ""
          echo "üîí Memory files must never be included in pull requests."
          echo ""
          echo "üõ†Ô∏è  To fix this PR:"
          echo "   git rm --cached memory/      # Remove from staging"
          echo "   git rm --cached *.memory     # Remove memory files"  
          echo "   git rm --cached *.learning   # Remove learning files"
          echo "   git commit -m 'Remove memory files from PR'"
          echo "   git push                     # Update PR"
          echo ""
          exit 1
        fi
        
        echo "‚úÖ PR diff clean - no memory files in changes"

    - name: Verify .gitignore protection
      run: |
        echo ""
        echo "üîç Verifying .gitignore protection for memory files..."
        
        # Check if memory patterns are properly ignored
        if ! grep -q "^memory/" .gitignore; then
          echo "‚ö†Ô∏è  WARNING: memory/ not found in .gitignore"
        fi
        
        if ! grep -q "\*.memory" .gitignore; then
          echo "‚ö†Ô∏è  WARNING: *.memory pattern not found in .gitignore"
        fi
        
        if ! grep -q "\*.learning" .gitignore; then
          echo "‚ö†Ô∏è  WARNING: *.learning pattern not found in .gitignore"
        fi
        
        echo "‚úÖ .gitignore verification complete"

    - name: Security scan summary
      run: |
        echo ""
        echo "üîí MEMORY PROTECTION SUMMARY"
        echo "=============================="
        echo "‚úÖ Repository scan: PASSED"
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          echo "‚úÖ PR diff scan: PASSED"
        fi
        echo "‚úÖ .gitignore check: COMPLETED"
        echo ""
        echo "üõ°Ô∏è  Multi-layer protection active:"
        echo "   - .gitignore: Prevents accidental staging"
        echo "   - Pre-commit hook: Local protection (.githooks/pre-commit)"
        echo "   - GitHub workflow: CI/CD protection (this check)"
        echo ""
        echo "‚úÖ Memory privacy maintained!"